{"version":3,"sources":["TodoList.js","index.js"],"names":["TodoList","props","state","todoNumber","listTodo","todoInfo","todoArray","onClickHandler","bind","onChangeNumber","getTodoInfo","makeListTodo","handlerKey","event","this","findIndex","todo","id","fetch","then","result","json","push","console","log","localStorage","clear","setItem","JSON","stringify","msg","alert","keyCode","map","index","strEl","onClick","setState","arrayProps","todoEl","prop","Info","wrapInfo","className","target","value","getItem","parse","type","onKeyUp","onChange","max","min","Component","ReactDOM","render","document","getElementById"],"mappings":"gNAyGeA,E,kDArGd,WAAYC,GAAQ,IAAD,8BACd,cAAMA,IACDC,MAAQ,CAACC,WAAY,EAAGC,SAAS,GAAGC,SAAU,MACnD,EAAKC,UAAY,GAEjB,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBACpB,EAAKI,WAAa,EAAKA,WAAWJ,KAAhB,gBATJ,E,kDAalB,SAAeK,GAAQ,IAAD,OACpB,GAAMC,KAAKZ,MAAMC,YAAc,GAAKW,KAAKZ,MAAMC,YAAc,IAM7D,IAAQ,GADAW,KAAKR,UAAUS,WAAY,SAACC,GAAS,OAAOA,EAAKC,IAAI,EAAKf,MAAMC,cAQxEe,MAAM,8CAA8CJ,KAAKZ,MAAMC,YAC5DgB,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACC,GACL,EAAKd,UAAUgB,KAAKF,GACpBG,QAAQC,IAAK,EAAKlB,WAElBmB,aAAaC,QACbD,aAAaE,QAAQ,aAAcC,KAAKC,UAAU,EAAKvB,YACvD,EAAKK,sBAfT,CACE,IAAImB,EAAM,0DAAkBhB,KAAKZ,MAAMC,WAAW,+CAElD4B,MAAOD,QARPC,MAAO,0E,wBAyBX,SAAWlB,GACa,KAAlBA,EAAMmB,SAAoC,KAAlBnB,EAAMmB,SAChClB,KAAKP,mB,0BAIT,WAAiB,IAAD,OACVH,EAASU,KAAKR,UAAU2B,KAAI,SAACjB,EAAKkB,GAClC,IAAIC,EAAQ,aAAanB,EAAKC,GAC5B,OAAO,oBAAkBmB,QAAS,WAAK,EAAK1B,YAAYwB,IAAjD,SAA4DC,GAAnDnB,EAAKC,OAG3BH,KAAKuB,SAAU,CAACjC,SAASA,M,yBAG3B,SAAY8B,GACV,IAAI7B,EACAiC,EAAW,GACXC,EAASzB,KAAKR,UAAU4B,GAE5B,IAAK,IAAIM,KAAQD,EAAQ,CACvB,IAAIE,EAAOD,EAAK,KAAKD,EAAOC,GACxBE,EAAW,+BAAOD,IAEtBH,EAAWhB,KAAKoB,GAGlBrC,EAAW,qBAAKsC,UAAU,WAAf,SAA2BL,IACtCxB,KAAKuB,SAAU,CAAChC,SAASA,M,4BAG3B,SAAeQ,GACZC,KAAKuB,SAAS,CAAClC,WAAYU,EAAM+B,OAAOC,U,+BAG3C,WACE,IAAIvC,EAAYmB,aAAaqB,QAAQ,cACtB,MAAXxC,IACFQ,KAAKR,UAAYsB,KAAKmB,MAAMzC,GAC5BQ,KAAKH,kB,oBAIT,WACE,OACC,sBAAKgC,UAAU,YAAf,UACC,mJACC,uBAAOK,KAAK,SAASH,MAAO/B,KAAKZ,MAAMC,WAAY8C,QAASnC,KAAKF,WAAYsC,SAAUpC,KAAKL,eAAgB0C,IAAI,MAAMC,IAAI,MAC1H,uBAAOJ,KAAK,SAASH,MAAM,wDAAgBT,QAAStB,KAAKP,iBAC1D,sBAAKoC,UAAU,WAAf,UACC,oBAAIA,UAAU,WAAd,SACC7B,KAAKZ,MAAME,WAGXU,KAAKZ,MAAMG,mB,GA/FIgD,aCAvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.70bd0bae.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport './css/todo.css'\r\n\r\nclass TodoList extends Component {\r\n\tconstructor(props) {\r\n      super(props);\r\n      this.state = {todoNumber: 1, listTodo:[],todoInfo: null};\r\n      this.todoArray = [];\r\n\r\n      this.onClickHandler = this.onClickHandler.bind(this);\r\n      this.onChangeNumber = this.onChangeNumber.bind(this);\r\n      this.getTodoInfo = this.getTodoInfo.bind(this);\r\n      this.makeListTodo = this.makeListTodo.bind(this);\r\n      this.handlerKey = this.handlerKey.bind(this);\r\n\r\n  }\r\n\r\n  onClickHandler(event) {\r\n    if (!(this.state.todoNumber >= 1 && this.state.todoNumber <= 200)) {\r\n      alert ('Только от 1 до 200');\r\n      return;\r\n    }\r\n\r\n    var i = this.todoArray.findIndex ( (todo)=> {return todo.id==this.state.todoNumber;});\r\n    if (i!=-1) {\r\n      var msg = 'Todo с номером '+this.state.todoNumber+' уже есть';\r\n\r\n      alert (msg);\r\n      return;\r\n    }\r\n\r\n    fetch('https://jsonplaceholder.typicode.com/todos/'+this.state.todoNumber)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        this.todoArray.push(result);\r\n        console.log (this.todoArray);\r\n\r\n        localStorage.clear();\r\n        localStorage.setItem('arrayTodos', JSON.stringify(this.todoArray));\r\n        this.makeListTodo();\r\n       \r\n      });\r\n  }\r\n\r\n  handlerKey(event) {\r\n    if (event.keyCode === 13 || event.keyCode === 14) {\r\n      this.onClickHandler();\r\n    }\r\n  }\r\n\r\n  makeListTodo () {\r\n    var listTodo=this.todoArray.map((todo,index) => {\r\n        var strEl = 'todos id->'+todo.id;\r\n          return <li key={todo.id} onClick={()=>{this.getTodoInfo(index);}}>{strEl}</li>;\r\n        });\r\n      \r\n    this.setState ({listTodo:listTodo});\r\n  }\r\n\r\n  getTodoInfo(index) {\r\n    var todoInfo;\r\n    var arrayProps=[];\r\n    var todoEl = this.todoArray[index];\r\n\r\n    for (var prop in todoEl) {\r\n      var Info = prop+': '+todoEl[prop];\r\n      var wrapInfo = <span>{Info}</span>;\r\n\r\n      arrayProps.push(wrapInfo);\r\n    }\r\n  \r\n    todoInfo = <div className='infoTodo'>{arrayProps}</div>;\r\n    this.setState ({todoInfo:todoInfo});\r\n  }\r\n\r\n  onChangeNumber(event) {\r\n     this.setState({todoNumber: event.target.value});\r\n  }\r\n\r\n  componentDidMount() {\r\n    var todoArray = localStorage.getItem('arrayTodos');\r\n    if (todoArray!=null) {\r\n      this.todoArray = JSON.parse(todoArray);\r\n      this.makeListTodo();\r\n    }\r\n  }\r\n\r\n  render() {\r\n  \t return(\r\n  \t \t<div className='container'>\r\n  \t \t\t<span>Введите номер todo от 1 до 200:</span>       \r\n  \t \t  <input type=\"number\" value={this.state.todoNumber} onKeyUp={this.handlerKey} onChange={this.onChangeNumber} max=\"200\" min=\"1\" />\r\n  \t \t  <input type=\"button\" value=\"Добавить todo\" onClick={this.onClickHandler} />       \r\n  \t \t\t<div className='wrapTodo'>\r\n  \t \t\t\t<ul className='listTodo'>\r\n  \t \t\t\t{this.state.listTodo}\r\n  \t \t\t\t</ul>\r\n  \t \t\t\r\n  \t \t\t\t{this.state.todoInfo}\r\n  \t \t\t\t\r\n  \t \t\t</div>\r\n  \t \t</div>\r\n  \t );\r\n  }\r\n}\r\nexport default TodoList","import ReactDOM from 'react-dom'\nimport TodoList from './TodoList'\n\nReactDOM.render(\n  <TodoList />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}